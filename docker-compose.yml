version: '3.8'

services:
  # MySQL database service
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-astronomy_db}
      MYSQL_USER: ${MYSQL_USER:-astronomy}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-astronomy}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mc3jpyObs.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - astronomy-network

  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      FLASK_CONFIG: ${FLASK_CONFIG:-production}
      DATABASE_URL: mysql+pymysql://${MYSQL_USER:-astronomy}:${MYSQL_PASSWORD:-astronomy}@db/${MYSQL_DATABASE:-astronomy_db}
      SECRET_KEY: ${SECRET_KEY:-astronomy-api-secret-key}
    ports:
      - "${API_PORT:-5000}:5000"
    command: >
      sh -c "
        python -m flask init-db &&
        python -m flask seed-db &&
        gunicorn --bind 0.0.0.0:5000 server:app
      "
    networks:
      - astronomy-network

networks:
  astronomy-network:
    driver: bridge

volumes:
  mysql_data:
